using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics.Eventing.Reader;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Linq;
using System.Security.Policy;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace MM_BM_Roulette
{
    public partial class Form1 : Form
    {
        private TextBox txtMoney;
        private TextBox txtBetAmount;
        private Button btnSpin;
        private Label lblResult;
        private Button btnRed;
        private Button btnBlack;
        private Button btn1to12;
        private Button btn13to24;
        private Button btn25to36;
        private Button btn19to36;
        private Button btn1to18;
        private Button Odd;
        private Button Even;
        private Button S112;
        private Button S212;
        private Button S312;
        private Button[] numberButtons;
        private Panel panel1;
        private Panel panel2;

        private int playerMoney = 1000;
        private int JelenlegiTet = 0;
        private string tet = "";
        public Form1()
        {
            InitializeComponent(); 
            this.Text = "Rulett";
            this.Icon = new Icon("favicon.ico");//kép: https://www.flaticon.com/free-icon/roulette_218417
            this.StartPosition = FormStartPosition.CenterScreen;
            this.MaximizeBox = false;
            this.MinimizeBox = false;
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            this.Text = "Rulett Játék";
            this.Size = new Size(1000, 600);
            this.StartPosition = FormStartPosition.CenterScreen;

            // játékos pénze
            txtMoney = new TextBox
            {
                Text = $"Pénz: {playerMoney}",
                Location = new Point(20, 20),
                Size = new Size(200, 30),
                ReadOnly = true,
                TextAlign = HorizontalAlignment.Center,
                Font = new Font("Arial", 12, FontStyle.Bold),
                Enabled = false
            };
            this.Controls.Add(txtMoney);

            // tét összeg megadása
            txtBetAmount = new TextBox
            {
                Text = "Add meg a tétet",
                Location = new Point(20, 60),
                Size = new Size(200, 30),
                TextAlign = HorizontalAlignment.Center
            };
            this.Controls.Add(txtBetAmount);

            // pörgetés gomb
            btnSpin = new Button
            {
                Text = "Pörgetés",
                Location = new Point(20, 100),
                Size = new Size(200, 40),
                Font = new Font("Arial", 12, FontStyle.Bold),
                BackColor = Color.Green,
                ForeColor = Color.White,
                FlatStyle = FlatStyle.Popup
            };
            btnSpin.Click += BtnSpin_Click;
            this.Controls.Add(btnSpin);

            // eredmény jelző
            lblResult = new Label
            {
                Text = "Helyezd el a téted!",
                Location = new Point(20, 160),
                Size = new Size(200, 30),
                Font = new Font("Arial", 12, FontStyle.Bold),
                BackColor = Color.White,
                ForeColor = Color.Black,
                FlatStyle = FlatStyle.Popup,
            };
            this.Controls.Add(lblResult);

            // piros gomb
            btnRed = new Button
            {
                Location = new Point(518, 500),
                Size = new Size(100, 50),
                BackColor = Color.Red,
                ForeColor = Color.Red,
                FlatStyle = FlatStyle.Popup

            };
            btnRed.Click += (s, n) => SetBet("Piros");
            this.Controls.Add(btnRed);

            //feket gomb
            btnBlack = new Button
            {
                Location = new Point(618, 500),
                Size = new Size(100, 50),
                BackColor = Color.Black,
                ForeColor = Color.Black,
                FlatStyle = FlatStyle.Popup
            };
            btnBlack.Click += (s, n) => SetBet("Fekete");
            this.Controls.Add(btnBlack);

            btn1to12 = new Button
            {
                Text = "1 to 12",
                Location = new Point(320, 450),
                Size = new Size(200, 50),
                Font = new Font("Arial", 12, FontStyle.Bold),
                BackColor = ColorTranslator.FromHtml("#08121A"),
                ForeColor = Color.White,
                FlatStyle = FlatStyle.Popup
            };
            btn1to12.Click += (s, n) => SetBet("1to12");
            this.Controls.Add(btn1to12);

            btn1to18 = new Button
            {
                Text = "1 to 18",
                Location = new Point(320, 500),
                Size = new Size(100, 50),
                Font = new Font("Arial", 12, FontStyle.Bold),
                BackColor = ColorTranslator.FromHtml("#08121A"),
                ForeColor = Color.White,
                FlatStyle = FlatStyle.Popup
            };
            btn1to18.Click += (s, n) => SetBet("1to18");
            this.Controls.Add(btn1to18);

            btn13to24 = new Button
            {
                Text = "13 to 24",
                Location = new Point(520, 450),
                Size = new Size(200, 50),
                Font = new Font("Arial", 12, FontStyle.Bold),
                BackColor = ColorTranslator.FromHtml("#08121A"),
                ForeColor = Color.White,
                FlatStyle = FlatStyle.Popup
            };
            btn13to24.Click += (s, n) => SetBet("13to24");
            this.Controls.Add(btn13to24);

            btn19to36 = new Button
            {
                Text = "19 to 36",
                Location = new Point(820, 500),
                Size = new Size(100, 50),
                Font = new Font("Arial", 12, FontStyle.Bold),
                BackColor = ColorTranslator.FromHtml("#08121A"),
                ForeColor = Color.White,
                FlatStyle = FlatStyle.Popup
            };
            btn19to36.Click += (s, n) => SetBet("19to36");
            this.Controls.Add(btn19to36);

            btn25to36 = new Button
            {
                Text = "25 to 36",
                Location = new Point(720, 450),
                Size = new Size(200, 50),
                Font = new Font("Arial", 12, FontStyle.Bold),
                BackColor = ColorTranslator.FromHtml("#08121A"),
                ForeColor = Color.White,
                FlatStyle = FlatStyle.Popup
            };
            btn25to36.Click += (s, n) => SetBet("25to36");
            this.Controls.Add(btn25to36);

            Odd = new Button
            {
                Text = "Odd",
                Location = new Point(720, 500),
                Size = new Size(100, 50),
                Font = new Font("Arial", 12, FontStyle.Bold),
                BackColor = ColorTranslator.FromHtml("#08121A"),
                ForeColor = Color.White,
                FlatStyle = FlatStyle.Popup
            };
            Odd.Click += (s, n) => SetBet("Odd");
            this.Controls.Add(Odd);

            Even = new Button
            {
                Text = "Even",
                Location = new Point(420, 500),
                Size = new Size(100, 50),
                Font = new Font("Arial", 12, FontStyle.Bold),
                BackColor = ColorTranslator.FromHtml("#08121A"),
                ForeColor = Color.White,
                FlatStyle = FlatStyle.Popup
            };
            Even.Click += (s, n) => SetBet("Even");
            this.Controls.Add(Even);


            //szám gombok
            string[,] szamok = new string[,]
            {
                { "", "", "", "", "", "", "", "", "", "", "", "", "" },
                { "", "3", "6", "9", "12", "15", "18", "21", "24", "27", "30", "33", "36" },
                { "0", "2", "5", "8", "11", "14", "17", "20", "23", "26", "29", "32", "35" },
                { "", "1", "4", "7", "10", "13", "16", "19", "22", "25", "28", "31", "34" }
            };

            numberButtons = new Button[37];

            for (int oszlop = 0; oszlop < szamok.GetLength(0); oszlop++)
            {
                for (int sor = 0; sor < szamok.GetLength(1); sor++)
                {
                    string szg = szamok[oszlop, sor];
                    if (string.IsNullOrEmpty(szg)) continue;

                    int szam = int.Parse(szg);
                    numberButtons[szam] = new Button
                    {
                        Text = szg,
                        Size = (szam == 0) ? new Size(60, 150) : new Size(50, 50),
                        Location = (szam == 0) ? new Point(260, 300) : new Point(270 + sor * 50, 250 + oszlop * 50),
                        BackColor = (szam == 0) ? Color.Green : (IsRed(szam) ? Color.Red : Color.Black),
                        Font = new Font("Arial", 12, FontStyle.Bold),
                        ForeColor = Color.White,
                        FlatStyle = FlatStyle.Popup,
                    };

                    // esemény kezelés könnyítése
                    int Kszam = szam;
                    numberButtons[szam].Click += (s, n) => SetBet(Kszam.ToString());

                    this.Controls.Add(numberButtons[szam]);
                }
            }

            //panel bal oldal szín beállítás
            panel1 = new Panel
            {
                Dock = DockStyle.Left,
                BackColor = ColorTranslator.FromHtml("#08121A"),
                Size = new Size(1000, 600)
            };
            this.Controls.Add(panel1);

            //panel jobb oldal beállítás
            panel2 = new Panel
            {
                Dock = DockStyle.Left,
                BackColor = ColorTranslator.FromHtml("#213743"),
                Size = new Size(250, 800)
            };
            this.Controls.Add(panel2);
        }

        public bool IsRed(int number)
        {
            // Rulett piros mezők számai
            int[] redNumbers = { 1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36 };
            return Array.Exists(redNumbers, n => n == number);
        }
        private void BtnBet_Click(object sender, EventArgs e)
        {
            

            if (!int.TryParse(txtMoney.Text, out int Megtettosszeg) || Megtettosszeg <= 0)
            {
                MessageBox.Show("Kérjük, adjon meg egy érvényes fogadási összeget.", "Hibás Bet", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            string moneyText = fixmoney.Text.Replace("Money: ", "");
            if (!int.TryParse(moneyText, out int JelenlegiPenz))
            {
                MessageBox.Show("\r\nNem sikerült lekérni a jelenlegi pénzt.", "Hiba", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (Megtettosszeg > JelenlegiPenz)
            {
                MessageBox.Show("Nincs elég pénze a fogadás megtételéhez.", "Elégtelen pénzeszköz", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            JelenlegiPenz -= Megtettosszeg;

            // Random spin logic
            Random SzamSzin = new Random();
            int GySzam = SzamSzin.Next(0, 37);

            string szin;
            if (GySzam == 0)
            {
                szin = "ZÖLD";
            }
            else if (IsRed(GySzam))
            {
                szin = "PIROS";
            }
            else
            {
                szin = "FEKETE";
            }

            int KiSzam;
            int kiSzin;
            int Kifizetes;


            MessageBox.Show($"Győztes szám: {GySzam}({szin})", "Pörgetés eredménye", MessageBoxButtons.OK, MessageBoxIcon.Information);
 
            if (clickedButton != null && int.TryParse(clickedButton.Text, out KiSzam))
            {
                if (KiSzam == GySzam)
                {
                    Kifizetes = Megtettosszeg * 35;  // 35x szorzó a számokra tett fogadásnál
                    JelenlegiPenz += Kifizetes;
                    MessageBox.Show($"Nyertél! Kifizetés: {Kifizetes}\n Szám/szín: {GySzam}({szin})", "Winner", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                else
                {
                    MessageBox.Show("Vesztettél. Sok szerencsét legközelebb", "Próbáld újra", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }

            //int megtettszam = int.Parse(clickedButton.Text);
            
            
            if (!string.IsNullOrEmpty(szin)) // Ellenőrizzük, hogy nem üres vagy null
            {
                if (clickedPiros.Text == "PIROS" || szin == "PIROS" || clickedPiros.Text == szin || clickedFekete.Text == "FEKETE" || szin == "FEKETE" || clickedFekete.Text == szin)
                {
                    int payout = (clickedButton.Text == "Piros" || clickedButton.Text == "Fekete") ? Megtettosszeg * 2 : Megtettosszeg * 35;
                    JelenlegiPenz += payout;
                    //Kifizetes = Megtettosszeg * 2;  // 2x szorzó a színre tett fogadásnál
                    JelenlegiPenz += payout;
                    MessageBox.Show($"Nyertél! Kifizetés: {payout}", "Winner", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }   
            }
            /*
            if (!string.IsNullOrEmpty(szin)) // Ellenőrizzük, hogy nem üres vagy null
            {
                if (clickedFekete == clickedButton)
                {
                    Kifizetes = Megtettosszeg * 2;  // 2x szorzó a színre tett fogadásnál
                    JelenlegiPenz += Kifizetes;
                    MessageBox.Show($"Nyertél! Kifizetés: {Kifizetes}", "Winner", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }*/
            fixmoney.Text = $"Money: {JelenlegiPenz}";
        }
        /*var BetOsszeg = 0;
        var Money = 0;
        var moneyText = fixmoney.Text.Replace("Money: ", "");
        if (!int.TryParse(moneyText, out Money))
        {
            MessageBox.Show("Hiba történt az aktuális pénz kiolvasásakor.", "Hiba", MessageBoxButtons.OK, MessageBoxIcon.Error);
            return;
        }

        // txtmoney ellenőrzese
        if (!int.TryParse(txtMoney.Text, out BetOsszeg) || BetOsszeg <= 0)
        {
            MessageBox.Show("Kérjük, adjon meg egy érvényes tétösszeget!", "Hiba", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            return;
        }

        // Összeg ellenőrzése
        if (BetOsszeg > Money)
        {
            MessageBox.Show("A megadott összeg több mint amennyi pénzed van", "Hiba", MessageBoxButtons.OK, MessageBoxIcon.Error);
        }
        else
        {
            Money -= BetOsszeg;//Megadott összeget kivonja a fix összegből
            fixmoney.Text = $"Money: {Money}";
        }*/

        private void Szabaly_Click(object sender, EventArgs e)
        {
            
            string szoveg = "További információk";
            Szabaly.Text = "i";
            var felirat = Szabaly.Text.Replace("Szabályzat: \n ", "");
            if (Szabaly.Text == "i")
            {
                Szabaly.Text = "i";
                MessageBox.Show("Szabályzat: \n ", "Alap Szabályzat", MessageBoxButtons.OK);
            }
            if (MessageBoxButtons.OK == MessageBoxButtons.OK)
            {
                Szabaly.Text = "i";
                MessageBox.Show("Esélyek: \n ", "Nyerési Esélyek",MessageBoxButtons.OK);
            }
        }
    }
}
